CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

PROJECT (Polyminis)

SET(M_COMPILE_FLAGS "-std=c++11 -g")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${M_COMPILE_FLAGS}")

INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/../thirdparty/gamelift/include")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/../thirdparty/websocketpp")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/../thirdparty/picojson")
LINK_DIRECTORIES("${PROJECT_SOURCE_DIR}/../thirdparty/gamelift/lib/amazon_linux_x64")
LINK_DIRECTORIES("${PROJECT_SOURCE_DIR}/../thirdparty/dependencies/sio_libs")
LINK_DIRECTORIES("${PROJECT_SOURCE_DIR}/../thirdparty/dependencies/boost_libs")

ADD_EXECUTABLE(Main Main.cpp)
ADD_SUBDIRECTORY(Core)
ADD_SUBDIRECTORY(Game)

SET(CMAKE_SKIP_BUILD_RPATH  FALSE)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE) 
SET(CMAKE_INSTALL_RPATH "")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)

TARGET_LINK_LIBRARIES(Main game)
TARGET_LINK_LIBRARIES(Main core)
TARGET_LINK_LIBRARIES(Main aws-cpp-sdk-gamelift-server)
TARGET_LINK_LIBRARIES(Main sioclient)
TARGET_LINK_LIBRARIES(Main boost_date_time boost_system)
SET(CMAKE_INSTALL_RPATH "$ORIGIN")
SET_TARGET_PROPERTIES(Main
    PROPERTIES INSTALL_RPATH "$ORIGIN")

INSTALL(TARGETS Main
  RUNTIME DESTINATION bin
)
